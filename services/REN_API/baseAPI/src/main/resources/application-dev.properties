logging.level.org.springframework=DEBUG

# Generate Dummy data
api.generate.dummy-data = false

# Configure CORS
api.cors.allowed-origins = {'http://front-ren-prototype.apps.paas-dev.psnc.pl', 'http://localhost:8080', 'http://localhost', 'https://localhost'}
api.cors.allowed-methods = {'HEAD', 'GET', 'POST', 'PUT', 'DELETE'}
api.cors.max-age = 3600

# Configure H2 SQL
# WARNING: RENergetic library's entities won't be created in H2, configure a PostgreSQL database for it
spring.datasource.url=jdbc:postgresql://localhost:5432/renerdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driverClassName=org.postgresql.Driver
spring.sql.platform=postgres

# Configure JPA libraries
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.use-new-id-generator-mappings=true
spring.jpa.hibernate.generate-ddl=true
# Change database when you init the back, the posible values are:
#  - update -> only create necesary tables and columns if it isn't created
#  - create -> drop and create necesary tables when back start
spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

# Configure Keycloak
keycloak.url = http://localhost:8081/auth
keycloak.realm = realm-renergetic
keycloak.client-id = renergetic-app
keycloak.admin.username = jeremy
keycloak.admin.password = jeremy
keycloak.admin.client-id = 7f847a94-c5fa-4b65-bec2-0faedda9e503