logging.level.org.springframework=DEBUG
logging.level.com.renergetic.kpiapi=DEBUG
# Generate Dummy data
api.generate.dummy-data = false

# Configure CORS
api.cors.allowed-origins = {'http://front-ren-prototype.apps.paas-dev.psnc.pl', 'http://localhost:8080', 'http://localhost', 'https://localhost'}
api.cors.allowed-methods = {'HEAD', 'GET', 'POST', 'PUT', 'DELETE'}
api.cors.max-age = 3600

# Configure Postgre SQL
spring.datasource.url=jdbc:postgresql://localhost:5432/renerdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driverClassName=org.postgresql.Driver
spring.sql.platform=postgres

# Configure JPA libraries
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.hibernate.use-new-id-generator-mappings=true
spring.jpa.hibernate.generate-ddl=true
# Change database when you init the back, the posible values are:
#  - update -> only create necesary tables and columns if it isn't created
#  - create -> drop and create necesary tables when back start
spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# URL to Obtain InfluxDB data
influx.api.url = http://influx-api-swagger-ren-prototype.apps.paas-dev.psnc.pl

# Configure Keycloak
keycloak.url = https://front-ren-prototype.apps.paas-dev.psnc.pl/auth
keycloak.realm = realm-renergetic
keycloak.client-id = renergetic-app
keycloak.admin.username = admin
keycloak.admin.password = admin
keycloak.admin.client-id = admin-cli