logging.level.org.springframework=DEBUG

# Service name and port to start
spring.application.name=hdrAPI
server.port=8082

# Spring data (Don't change it)
spring.data.jpa.repositories.enabled=true

# Configure Postgre SQL
spring.datasource.url=jdbc:postgresql://postgresql-db-sv:5432/renerdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driverClassName=org.postgresql.Driver

spring.sql.platform=postgres
spring.sql.init.enable=always

# Configure JPA libraries
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.hibernate.use-new-id-generator-mappings=true
spring.jpa.hibernate.generate-ddl=true
# Change database when you init the back, the posible values are:
#  - update -> only create necesary tables and columns if it isn't created
#  - create -> drop and create necesary tables when back start
spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Generate Dummy data
api.generate.dummy-data = true

# URL to Obtain InfluxDB data
influx.api.url = http://influx-api-sv:8082

# Configuring API Cache to avoid Java Out of Memory
spring.jpa.properties.hibernate.query.plan_cache_max_size = 1024
spring.jpa.properties.hibernate.query.plan_parameter_metadata_max_size = 64
spring.jpa.properties.hibernate.query.in_clause_parameter_padding = true

# Swagger and OpenAPI docs
springdoc.api-docs.path=/api/docs
springdoc.swagger-ui.path=/api/docs-ui
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.doc-expansion=none
springdoc.pre-loading-enabled=true
springdoc.packages-to-scan=com.renergetic.hdrapi.controller