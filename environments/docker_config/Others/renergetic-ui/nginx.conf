
map $http_apikey $key {
    default   $http_apikey;
    ""        "eyJ4NXQiOiJOMkpqTWpOaU0yRXhZalJrTnpaalptWTFZVEF4Tm1GbE5qZzRPV1UxWVdRMll6YzFObVk1TlE9PSIsImtpZCI6ImdhdGV3YXlfY2VydGlmaWNhdGVfYWxpYXMiLCJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhZG1pbkBjYXJib24uc3VwZXIiLCJhcHBsaWNhdGlvbiI6eyJvd25lciI6ImFkbWluIiwidGllclF1b3RhVHlwZSI6bnVsbCwidGllciI6IlVubGltaXRlZCIsIm5hbWUiOiJSZW5lcmdldGljIiwiaWQiOjIsInV1aWQiOiI5ODZhNzVkZC02MmIxLTQ2YjctODA5OC1kMWU1NzJjMjQ2ZWIifSwiaXNzIjoiaHR0cHM6XC9cL2xvY2FsaG9zdDo5NDQzXC9vYXV0aDJcL3Rva2VuIiwidGllckluZm8iOnsiVW5saW1pdGVkIjp7InRpZXJRdW90YVR5cGUiOiJyZXF1ZXN0Q291bnQiLCJncmFwaFFMTWF4Q29tcGxleGl0eSI6MCwiZ3JhcGhRTE1heERlcHRoIjowLCJzdG9wT25RdW90YVJlYWNoIjp0cnVlLCJzcGlrZUFycmVzdExpbWl0IjowLCJzcGlrZUFycmVzdFVuaXQiOm51bGx9fSwia2V5dHlwZSI6IlBST0RVQ1RJT04iLCJwZXJtaXR0ZWRSZWZlcmVyIjoiIiwic3Vic2NyaWJlZEFQSXMiOlt7InN1YnNjcmliZXJUZW5hbnREb21haW4iOiJjYXJib24uc3VwZXIiLCJuYW1lIjoiTWVhc3VyZW1lbnRBUEkiLCJjb250ZXh0IjoiXC9hcGktbWVhc3VyZW1lbnRcLzEuMCIsInB1Ymxpc2hlciI6ImFkbWluIiwidmVyc2lvbiI6IjEuMCIsInN1YnNjcmlwdGlvblRpZXIiOiJVbmxpbWl0ZWQifSx7InN1YnNjcmliZXJUZW5hbnREb21haW4iOiJjYXJib24uc3VwZXIiLCJuYW1lIjoiUG9zdGdyZVNRTEFQSSIsImNvbnRleHQiOiJcL2FwaS1wb3N0Z3JlXC8xLjAiLCJwdWJsaXNoZXIiOiJhZG1pbiIsInZlcnNpb24iOiIxLjAiLCJzdWJzY3JpcHRpb25UaWVyIjoiVW5saW1pdGVkIn1dLCJ0b2tlbl90eXBlIjoiYXBpS2V5IiwicGVybWl0dGVkSVAiOiIiLCJpYXQiOjE2Nzc4NTA2NzMsImp0aSI6IjQ3ZmY1ZGRmLTQzNDYtNDUwZC05MmUzLTZiYzI1OGEyOWM0MiJ9.H-VgcW7DjAXg0Ceh_jNkrtUIKPUcPaEpPx2WYk1jRNnGpWoExLp2P818HyJEmNEGSD0lkrOMA4P3PGja_Sb_x_LX2ig9QlzndIQsPhbPDjXSgbTIhybbkCVfpaazg1QYeJB2OPIl3Vk4iHQjKR3QE6NWBb6b4HZjnioI0k2zkRJD3GBoLtFRzl82t2EFqAi7GFsBxA2ThDG2wDHa7wqcubNnzGtTPIsedjG32OUTUlJH2xT49CJ84ytpZhiur-JknR-gdb3p6MrVbZlAOe8DLxZa1BvwvMtPlQX5Y8qUTfh7VdqDH4Fd5V7CY-B-UPQ1E_oKipIXnO4NJNTtLmhEJw==";
}

server {
    listen       8080;
    listen  [::]:8080;

    listen 8443 ssl;
    listen [::]:8443 ssl;

    ssl_certificate /etc/nginx/certs/nginx-certificate.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;
    ssl_protocols       TLSv1.1 TLSv1.2;

    server_name  front-ren-prototype.apps.paas-dev.psnc.pl;

    proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address 
    proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    proxy_set_header X-Forwarded-Host $host; # to forward the original host requested by the client
    
    #access_log  /var/log/nginx/host.access.log  main;
    
    location ^~ /api-postgre/1.0/api/trigger {
        rewrite /api-postgre/1.0/(.*) /$1 break;
        proxy_pass http://rules-api-sv:8082;

        proxy_redirect off;
    }

    location ^~ /api-postgre/1.0/api/meter {
        rewrite /api-postgre/1.0/(.*) /$1 break;
        proxy_pass http://kpi-api-sv:8082;

        proxy_redirect off;
    }
    
    location ^~ /api-postgre/1.0/api/user {
        rewrite /api-postgre/1.0/(.*) /$1 break;
        proxy_pass http://user-api-sv:8082;

        proxy_redirect off;
    }

    location ^~ /api-postgre/1.0/api/manage/user {
        rewrite /api-postgre/1.0/(.*) /$1 break;
        proxy_pass http://user-api-sv:8082;

        proxy_redirect off;
    }

    location ^~ /api-postgre/1.0/api/ui {
        rewrite /api-postgre/1.0/(.*) /$1 break;
        proxy_pass http://wrapper-api-sv:8082;

        proxy_redirect off;
    }

    location ^~ /api-postgre/1.0/api/data {
        rewrite /api-postgre/1.0/(.*) /$1 break;
        proxy_pass http://data-api-sv:8082;

        proxy_redirect off;
    }

    location ^~ /api-postgre/1.0/api/hdr {
        rewrite /api-postgre/1.0/(.*) /$1 break;
        proxy_pass http://hdr-api-sv:8082;

        proxy_redirect off;
    }

    # location ^~ /api-postgre/1.0/api/ui {
    #     rewrite /api-postgre/1.0/(.*) /$1 break;
    #     proxy_pass http://hdr-api-sv:8082;

    #     proxy_redirect off;
    # }

    # location ^~ /api-postgre/1.0/api/assets {
    #     rewrite /api-postgre/1.0/(.*) /$1 break;
    #     proxy_pass http://hdr-api-sv:8082;

    #     proxy_redirect off;
    # }

    location ^~ /api-postgre/1.0 {
        rewrite /api-postgre/1.0/(.*) /$1 break;
        proxy_pass http://base-api-sv:8082;

        proxy_redirect off;
    }

    location ^~ /api-measurement/1.0 {
        rewrite /api-measurement/1.0/(.*) /$1 break;
        proxy_pass http://influx-api-sv:8082;

        proxy_redirect off;
    }

    location ^~ /api-ingestion/1.0 {
        rewrite /api-ingestion/1.0/(.*) /$1 break;
        proxy_pass http://ingestion-api-sv:8082;

        proxy_redirect off;
    }

    location ^~ /auth {
        proxy_pass http://keycloak-sv:8080;
    }

    location ^~ / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html?uri=$uri;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}